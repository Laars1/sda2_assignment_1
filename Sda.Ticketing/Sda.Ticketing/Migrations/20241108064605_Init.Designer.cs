// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sda.Ticketing.Persistance;

#nullable disable

namespace Sda.Ticketing.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241108064605_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.GiftCard", b =>
                {
                    b.Property<int>("GiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftId"));

                    b.Property<float>("CardBalance")
                        .HasColumnType("real");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("PromoNumber")
                        .HasColumnType("float");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("GiftId");

                    b.HasIndex("TicketId");

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.Orders", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"));

                    b.Property<int>("OTID")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StockAmount")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("OTID");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.OrdersTicket", b =>
                {
                    b.Property<int>("OTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OTID"));

                    b.Property<float>("Cash")
                        .HasColumnType("real");

                    b.Property<float>("Credit")
                        .HasColumnType("real");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<float>("TaxRate")
                        .HasColumnType("real");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("OTID");

                    b.ToTable("OrdersTickets");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.ProductInventory", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductSubType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StockIn")
                        .HasColumnType("int");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("VendorId");

                    b.ToTable("ProductInventories");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.ReturnTable", b =>
                {
                    b.Property<int>("RTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RTID"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<float>("Exchanges")
                        .HasColumnType("real");

                    b.Property<float>("Refunds")
                        .HasColumnType("real");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("RTID");

                    b.HasIndex("TicketId");

                    b.ToTable("ReturnTables");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.TicketSystem", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("CartPurchase")
                        .HasColumnType("int");

                    b.Property<float>("Cash")
                        .HasColumnType("real");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<float>("Credit")
                        .HasColumnType("real");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<float>("TaxRate")
                        .HasColumnType("real");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("TicketId");

                    b.ToTable("TicketSystems");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.VendorInfo", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("FaxNumber")
                        .HasColumnType("float");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("VendorId");

                    b.ToTable("VendorInfos");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.GiftCard", b =>
                {
                    b.HasOne("Sda.Ticketing.Persistance.Entities.TicketSystem", "TicketSystem")
                        .WithMany("GiftCards")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketSystem");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.Orders", b =>
                {
                    b.HasOne("Sda.Ticketing.Persistance.Entities.OrdersTicket", "OrdersTicket")
                        .WithMany("Orders")
                        .HasForeignKey("OTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sda.Ticketing.Persistance.Entities.ProductInventory", "ProductInventory")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdersTicket");

                    b.Navigation("ProductInventory");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.ProductInventory", b =>
                {
                    b.HasOne("Sda.Ticketing.Persistance.Entities.VendorInfo", "VendorInfo")
                        .WithMany("ProductInventories")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorInfo");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.ReturnTable", b =>
                {
                    b.HasOne("Sda.Ticketing.Persistance.Entities.TicketSystem", "TicketSystem")
                        .WithMany("ReturnTables")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketSystem");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.OrdersTicket", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.ProductInventory", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.TicketSystem", b =>
                {
                    b.Navigation("GiftCards");

                    b.Navigation("ReturnTables");
                });

            modelBuilder.Entity("Sda.Ticketing.Persistance.Entities.VendorInfo", b =>
                {
                    b.Navigation("ProductInventories");
                });
#pragma warning restore 612, 618
        }
    }
}
